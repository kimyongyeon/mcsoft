요약

하이브리드 앱의 구현 방식은 몇가지가 존재합니다.
보통은 리소스(html, js, css, img 등)를 단말기에 가지고 있습니다.
단말기에 가지고 있는 이유는 서버와의 데이터 통신시 불필요한 데이터를 주고 받지 않기위함입니다.

서버사이드에 접속해서 구현되는 모바일웹의 경우는 화면을 랜더링해 표현하기위한 모든 자원이
서버에서 단말기로 전송이됩니다. 
같은 작업을 반복하게되는경우 그만큼의 통신량이 발생합니다. (html 스트링)

화면 UI 및 단말기에서 벌어지는 모든 비즈니스로직은 단말기에서 이미 가지고 있으며
서버와의 통신시 필요한 데이터만 주고 받도록 되어있습니다.

클라이언트단 비즈니스 로직을 작성하기에 앞서 현재 구현되어있는 구성을 요약합니다.

1. 서버와 통신이 필요없는 비즈니스로직(화면이동, style 변경, dom 컨트롤) 등은 모두 클라이언트에서 구현합니다.
2. 서버와 통신이 필요한 경우에는 인터페이스 아이디를 반드시 서버에 등록해야합니다. (관리자 화면의 전문관리 참고)
3. 인터페이스 아이디는 클라이언트 개발자와 서버개발자가 협의하고 해당 인터페이스에서 리턴되는 데이터(json 포맷)가 정의되지 않은경우에는
   더미데이터(test 데이터)를 등록하여 클라이언트에게 데이터를 전달하도록 합니다.
4. 인터페이스(전문) 작성은 자바의 기본지식만으로도 가능하도록 구현되어 쉽게 처리할 수 있습니다. (ibatis, mybatis 지식 필요)
5. 서버와 항상 통신이 연결되어있지 않은 비동기 통신입니다.
6. 서버와 클라이언트가 주고 받는 데이터의 포맷은 json 포맷입니다.
7. 클라이언트가 비즈니스로직에서 사용하는 데이터는 json 을 기본으로 하고 있습니다. (xml 등을 사용하고 싶다면 common.js 및 각 페이지에서 사용하는 js 파일을 적절히 수정하여 사용합니다.)
8. 서버와의 통신은 스크립트에서 하는것처럼 보이지만 네이티브(java)에서 실제로 통신을 하고 있습니다. IOS 개발시 반드시 개발자에게 전달되어야합니다.

############################################################################################################################################
############################################################################################################################################
############################################################################################################################################

압축파일에 동봉해드리는 template.js 는 페이지 단위의 비즈니스 로직을 구성하기위한 템플릿이며
반드시 pcs.html.js 등 현재 구현되어있는 스크립트 아키텍쳐 부분을 100% 사용하지 않고 다른 구성이 있다면 사용해도 무방합니다.
편의를 위해 jquery 를 사용했지만 다른 좋은것이 있다면 모두 사용하지 않고 별도로 구성하셔도 됩니다.
단 서버와의 통신은 인터페이스를 통해 데이터를 주고 받는것을 권장합니다.